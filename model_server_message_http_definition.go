/*
Otito Ingester documentation

A suite of APIs to store and manage request and response logs

API version: 0.0.1
Contact: lanre@ayinke.ventures
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServerMessageHTTPDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerMessageHTTPDefinition{}

// ServerMessageHTTPDefinition struct for ServerMessageHTTPDefinition
type ServerMessageHTTPDefinition struct {
	// The body of the request/response
	Body *string `json:"body,omitempty"`
	// The header of the request/response
	Header *map[string][]string `json:"header,omitempty"`
}

// NewServerMessageHTTPDefinition instantiates a new ServerMessageHTTPDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerMessageHTTPDefinition() *ServerMessageHTTPDefinition {
	this := ServerMessageHTTPDefinition{}
	return &this
}

// NewServerMessageHTTPDefinitionWithDefaults instantiates a new ServerMessageHTTPDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerMessageHTTPDefinitionWithDefaults() *ServerMessageHTTPDefinition {
	this := ServerMessageHTTPDefinition{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *ServerMessageHTTPDefinition) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerMessageHTTPDefinition) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *ServerMessageHTTPDefinition) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *ServerMessageHTTPDefinition) SetBody(v string) {
	o.Body = &v
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *ServerMessageHTTPDefinition) GetHeader() map[string][]string {
	if o == nil || IsNil(o.Header) {
		var ret map[string][]string
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerMessageHTTPDefinition) GetHeaderOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Header) {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *ServerMessageHTTPDefinition) HasHeader() bool {
	if o != nil && !IsNil(o.Header) {
		return true
	}

	return false
}

// SetHeader gets a reference to the given map[string][]string and assigns it to the Header field.
func (o *ServerMessageHTTPDefinition) SetHeader(v map[string][]string) {
	o.Header = &v
}

func (o ServerMessageHTTPDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerMessageHTTPDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.Header) {
		toSerialize["header"] = o.Header
	}
	return toSerialize, nil
}

type NullableServerMessageHTTPDefinition struct {
	value *ServerMessageHTTPDefinition
	isSet bool
}

func (v NullableServerMessageHTTPDefinition) Get() *ServerMessageHTTPDefinition {
	return v.value
}

func (v *NullableServerMessageHTTPDefinition) Set(val *ServerMessageHTTPDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableServerMessageHTTPDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableServerMessageHTTPDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerMessageHTTPDefinition(val *ServerMessageHTTPDefinition) *NullableServerMessageHTTPDefinition {
	return &NullableServerMessageHTTPDefinition{value: val, isSet: true}
}

func (v NullableServerMessageHTTPDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerMessageHTTPDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


